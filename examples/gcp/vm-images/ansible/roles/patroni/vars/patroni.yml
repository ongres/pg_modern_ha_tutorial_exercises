---
#
# Patroni-Postgres related configuration
#
# Documentation of variables are placed in 
# doc/config/common/postgresql.conf
#
# TODO: 
# - Rename vars which are related to Postgres
#   exclusively with postgresql_* prefix, Patroni
#   with patroni_* prefix and playbook related
#   with task_* prefix.

#
# Playbook configuration
#

## DEPRECATED Control if using patroni or plain deploy
patroni_enabled: "false"

postgresql_disk_mountdir: "/var/postgresql"
postgresql_custom_datadir: "{{postgresql_disk_mountdir}}/data"

postgresql_wal_bucket_name: pgwal
postgresql_wal_local_path: /pg_archive

#
# Postgres configuration
#

## Locations 
postgresql_data_directory: "/var/lib/postgresql/{{ postgresql_version }}/main"
postgresql_hba_file: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
postgresql_ident_file: "/etc/postgresql/{{ postgresql_version }}/main/pg_ident.conf"
postgresql_pid_dir: "/var/run/postgresql"
postgresql_bin_path: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
postgresql_external_pid_file: "{{ postgresql_pid_dir }}/{{ postgresql_version }}-main.pid"

## Connection
postgresql_conf_file: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
postgresql_version: '9.6'
postgresql_port: 5433
postgresql_max_connections: 80
postgresql_superuser_reserved_connections: 5

postgresql_ssl: 'off'

## Memory	
postgresql_shared_buffers: '1GB' #'12GB'
postgresql_huge_pages: 'off'
postgresql_temp_buffers: '16MB' #'256MB'
postgresql_maintenance_work_mem: '512GB' #'1GB'
postgresql_work_mem: '16MB'
postgresql_shared_preload_libraries: 'pg_stat_statements'
postgresql_vacuum_cost_limit: 2000
postgresql_bgwriter_delay: '20ms'
postgresql_bgwriter_lru_maxpages: 1000
postgresql_effective_io_concurrency: 2

## WAL
postgresql_wal_level: 'logical'
postgresql_checkpoint_timeout: '15min'
postgresql_max_wal_size: '100GB'
postgresql_min_wal_size: '1GB'
postgresql_checkpoint_completion_target: 0.9
postgresql_archive_mode: 'on'
postgresql_archive_command: '/bin/true'
postgresql_archive_timeout: 60

## Replication
postgresql_max_wal_senders: 10
postgresql_max_replication_slots: 10
postgresql_track_commit_timestamp: on
postgresql_default_statistics_target: 1000
postgresql_hot_standby_feedback: 'on'

## Query tuning
postgresql_effective_cache_size: '2GB' #32GB 
postgresql_random_page_cost: 1.2

## Log
postgresql_log_rotation_size: '100MB'
postgresql_log_min_duration_statement: 10000
postgresql_log_checkpoints: on
postgresql_log_connections: on
postgresql_log_disconnections: on
postgresql_log_line_prefix: '%t [%p-%l] %q%u@%d '
## Transactions
postgresql_max_locks_per_transaction: 256

## Others
postgresql_locale: 'en_US.UTF-8'

#
# Patroni exclusive vars
#

## Cluster name and scope vars
patroni_scope: "customer"
# DEPRECATED as we implement this on post-install
# on this project, although it is necessary
# if implemented with playbooks
#patroni_node_name: "{{ansible_hostname}}"

## Bootstrap vars
patroni_dcs_ttl: 30 # Control the TTL on the DCS

# DEPRECATED: Now installed through pip, although
# we want to keep this in case we need to apply
# unpackaged changes
#patroni_repository: "https://github.com/zalando/patroni.git"

postgresql_encoding: 'UTF8' # Used in bootstrap

postgresql_replication_user: 'replication'
postgresql_replication_pass: 'a' #!vault |

postgresql_admin_user: 'postgres'
postgresql_admin_pass: 'a' #!vault |

patroni_hba_rules:
    - "local   all             postgres                                  peer"
    - "local   all             all                                       md5"
    - "host    all             all             172.0.0.0/8                md5"
    - "host    replication     {{postgresql_replication_user}}         172.0.0.0/8                md5"
#     - "local   all             all                                       trust"

patroni_location: "/opt/patroni"
patroni_configuration_dir: "/etc/patroni"


## Configuring Patroni-Postgres
#patroni_pg_default_service: "postgresql-{{ postgresql_version }}"
patroni_pg_default_service: "postgresql" # we expect to have only 1 instance per machine 
patroni_pg_path: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
patroni_pg_max_connections: 500
patroni_postgres_port: "{{ postgresql_port }}"
#patroni_archive_command: "mkdir -p {{ postgresql_wal_local_path }} && test ! -f {{ postgresql_wal_local_path }}/%f && cp %p {{ postgresql_wal_local_path }}/%f"
patroni_archive_command: "envdir {{pg_wale_env_folder}} {{pg_wale_bin}} wal-push \"%p\""
patroni_restore_command: "envdir {{pg_wale_env_folder}} {{pg_wale_bin}} wal-fetch \"%f\" \"%p\""

patroni_node_configuration: "{{ patroni_configuration_dir }}/postgres.yml"
patroni_stats_temp: "/var/run/postgresql/9.6-main.pg_stat_tmp"

# NOT IMPLEMENTED YET
# We want to keep pgdata and pgxlog separated for allowing better performance
# at storage level.
devices:
  pgdata:
    blk: '/dev/sdb'
    mount_opts: 'noatime,noexec,nodiratime,noquota'
  pgxlog:
    blk: '/dev/sdc'
    mount_opts: 'noatime,noexec,nodiratime,noquota'
